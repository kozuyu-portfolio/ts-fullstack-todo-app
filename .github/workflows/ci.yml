name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NODE_VERSION: "22"
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres?schema=public"
      DB_HOST: "localhost"
      REDIS_URL: "redis://localhost:6379/0"
      JWT_ACCESS_SECRET: "test-access-secret"
      JWT_ACCESS_EXPIRES_IN: "1h"
      JWT_REFRESH_SECRET: "test-refresh-secret"
      JWT_REFRESH_EXPIRES_IN: "7d"
      ATTACHMENT_BUCKET: "test-bucket"
    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile && pnpm shared build && pnpm api-client build

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Migrate database
        run: pnpm api exec prisma migrate reset --force

      - name: Install Cypress
        run: pnpm web exec cypress install

      - name: Cache Cypress
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm type-check

      - name: Unit tests
        run: pnpm test:unit

      - name: E2E tests (Cypress)
        env:
          CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
        run: |
          pnpm web test:e2e

      - name: Build
        run: pnpm api build && pnpm web build:dev
